<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1_run_args" kind="class" language="C++" prot="public">
    <compoundname>space::RunArgs</compoundname>
    <includes refid="simulator_8hpp" local="no">simulator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ParticleSys</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classspace_1_1_run_args_1a46fb7c229ea0286d1a1659856c975867" prot="public" static="no">
        <type>typename ParticleSys ::template <ref refid="classspace_1_1_run_args_1a46fb7c229ea0286d1a1659856c975867" kindref="member">Container</ref>&lt; _T_... &gt;</type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::Container =  typename ParticleSys ::template Container&lt;_T_...&gt;</definition>
        <argsstring></argsstring>
        <name>Container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" kindref="member">Scalar</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::Scalar =  typename ParticleSys ::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1ad4b83219b5ce45849ff5cc682274f011" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1ad4b83219b5ce45849ff5cc682274f011" kindref="member">ScalarArray</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::ScalarArray =  typename ParticleSys ::ScalarArray</definition>
        <argsstring></argsstring>
        <name>ScalarArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1ab5386117761e5b4eb52e243912a9c502" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1ab5386117761e5b4eb52e243912a9c502" kindref="member">IdxArray</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::IdxArray =  typename ParticleSys ::IdxArray</definition>
        <argsstring></argsstring>
        <name>IdxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1af82e73ab9f0c400a9cde0575d829517a" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1af82e73ab9f0c400a9cde0575d829517a" kindref="member">IntArray</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::IntArray =  typename ParticleSys ::IntArray</definition>
        <argsstring></argsstring>
        <name>IntArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1a3d8afaf1311019a3c2fb27734937bd2c" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1a3d8afaf1311019a3c2fb27734937bd2c" kindref="member">Vector</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::Vector =  typename ParticleSys ::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1abad11eb69b51816f44b2e05b17230852" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1abad11eb69b51816f44b2e05b17230852" kindref="member">VectorArray</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::VectorArray =  typename ParticleSys ::VectorArray</definition>
        <argsstring></argsstring>
        <name>VectorArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1affdb79111542448d328bcc0d0ffd105b" prot="public" static="no">
        <type>typename ParticleSys ::<ref refid="classspace_1_1_run_args_1affdb79111542448d328bcc0d0ffd105b" kindref="member">Coord</ref></type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::Coord =  typename ParticleSys ::Coord</definition>
        <argsstring></argsstring>
        <name>Coord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="62" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1ab2ae5d33c6cfb8573ce977e9820f0938" prot="public" static="no">
        <type>std::function&lt; void(ParticleSys &amp;)&gt;</type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::Callback =  std::function&lt;void(ParticleSys &amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>Callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function type for pre-operation, pos-operation and stop operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="67" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classspace_1_1_run_args_1ad706d387865fd3b6399a0d67be56f079" prot="public" static="no">
        <type>std::function&lt; bool(ParticleSys &amp;)&gt;</type>
        <definition>using space::RunArgs&lt; ParticleSys &gt;::StopCall =  std::function&lt;bool(ParticleSys &amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>StopCall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function type for stop condition. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="72" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classspace_1_1_run_args_1a918fcf4f601c96b9aaf477fb8e26e510" prot="public" static="no" mutable="no">
        <type><ref refid="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" kindref="member">Scalar</ref></type>
        <definition>Scalar space::RunArgs&lt; ParticleSys &gt;::step_size</definition>
        <argsstring></argsstring>
        <name>step_size</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initial step size for the integration of the <ref refid="classspace_1_1_simulator" kindref="compound">Simulator</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="79" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1a4f43bc396d42b099ecfb41bdb2d78d7d" prot="public" static="no" mutable="no">
        <type><ref refid="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" kindref="member">Scalar</ref></type>
        <definition>Scalar space::RunArgs&lt; ParticleSys &gt;::end_time</definition>
        <argsstring></argsstring>
        <name>end_time</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The time duration for the integration of the <ref refid="classspace_1_1_simulator" kindref="compound">Simulator</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="84" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1a0f130e30d4bdb4b1fbfd3e067ac0eea9" prot="public" static="no" mutable="no">
        <type><ref refid="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" kindref="member">Scalar</ref></type>
        <definition>Scalar space::RunArgs&lt; ParticleSys &gt;::atol</definition>
        <argsstring></argsstring>
        <name>atol</name>
        <initializer>{1e-12}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The absolute error tolerance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="89" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1abd0b0970bbfc5f62d7e7ac07a2f54c71" prot="public" static="no" mutable="no">
        <type><ref refid="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" kindref="member">Scalar</ref></type>
        <definition>Scalar space::RunArgs&lt; ParticleSys &gt;::rtol</definition>
        <argsstring></argsstring>
        <name>rtol</name>
        <initializer>{1e-12}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The relative error tolerance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="94" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1_run_args_1a5feb787410f3b0f25682cfae6bd05cd4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classspace_1_1_run_args_1ab2ae5d33c6cfb8573ce977e9820f0938" kindref="member">Callback</ref> &gt;</type>
        <definition>std::vector&lt;Callback&gt; space::RunArgs&lt; ParticleSys &gt;::pre_opts_</definition>
        <argsstring></argsstring>
        <name>pre_opts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="193" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1a9b86cc38a949a66c4043e53a0cf0368d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classspace_1_1_run_args_1ab2ae5d33c6cfb8573ce977e9820f0938" kindref="member">Callback</ref> &gt;</type>
        <definition>std::vector&lt;Callback&gt; space::RunArgs&lt; ParticleSys &gt;::post_opts_</definition>
        <argsstring></argsstring>
        <name>post_opts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="195" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1a04410ba0463f8c760db7385b07da4204" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classspace_1_1_run_args_1ab2ae5d33c6cfb8573ce977e9820f0938" kindref="member">Callback</ref> &gt;</type>
        <definition>std::vector&lt;Callback&gt; space::RunArgs&lt; ParticleSys &gt;::stop_opts_</definition>
        <argsstring></argsstring>
        <name>stop_opts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="197" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1a04921230c25ee65ef160f2b7ad295f84" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classspace_1_1_run_args_1ad706d387865fd3b6399a0d67be56f079" kindref="member">StopCall</ref> &gt;</type>
        <definition>std::vector&lt;StopCall&gt; space::RunArgs&lt; ParticleSys &gt;::stop_cond_</definition>
        <argsstring></argsstring>
        <name>stop_cond_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="199" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1_run_args_1ab04556c795d6957ca8b2fbc36ddd5384" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool space::RunArgs&lt; ParticleSys &gt;::is_end_time_set_</definition>
        <argsstring></argsstring>
        <name>is_end_time_set_</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="201" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1_run_args_1a08bff0eae80220bd3d5032dc03204d73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::pre_operations</definition>
        <argsstring>(ParticleSys &amp;particle_sys) const</argsstring>
        <name>pre_operations</name>
        <param>
          <type>ParticleSys &amp;</type>
          <declname>particle_sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call the all registered pre-operation functions by sequence.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">particle_sys</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system that is going to be operated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="102" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1afb2d6fd4b30be449e6fc2d25da8ade22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::post_operations</definition>
        <argsstring>(ParticleSys &amp;particle_sys) const</argsstring>
        <name>post_operations</name>
        <param>
          <type>ParticleSys &amp;</type>
          <declname>particle_sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call the all registered pos-operation functions by sequence.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">particle_sys</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system that is going to be operated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="109" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1aff3a142b6e217413f37718ad32c21bc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::stop_operations</definition>
        <argsstring>(ParticleSys &amp;particle_sys) const</argsstring>
        <name>stop_operations</name>
        <param>
          <type>ParticleSys &amp;</type>
          <declname>particle_sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call the all registered stop-operation functions by sequence.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">particle_sys</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system that is going to be operated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="116" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="298" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1afa5a645ceadab32a4f924ffd76bed147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::RunArgs&lt; ParticleSys &gt;::check_stops</definition>
        <argsstring>(ParticleSys &amp;particle_sys) const</argsstring>
        <name>check_stops</name>
        <param>
          <type>ParticleSys &amp;</type>
          <declname>particle_sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check the all registered stop condition functions by sequence. If any of them is satisfied, return <computeroutput>true</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">particle_sys</parametername>
</parameternamelist>
<parameterdescription>
<para>The particle system that is going to be checked </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="123" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="305" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1a40dd8e75c3602befb2ea3a54f850a3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::add_pre_step_operation</definition>
        <argsstring>(Func func, Args &amp;&amp;... args)</argsstring>
        <name>add_pre_step_operation</name>
        <param>
          <type>Func</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a callable object(function pointer, functor, lambda,etc...) to pre-step-operations.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable type that is conversional to member type Callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the binding arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>Binding arguments.If func accepts more than one arguments, you can bind the rest arguments here. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="134" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1a356e0a6fb304ecbd7c649ae3a0486594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::add_post_step_operation</definition>
        <argsstring>(Func func, Args &amp;&amp;... args)</argsstring>
        <name>add_post_step_operation</name>
        <param>
          <type>Func</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a callable object(function pointer, functor, lambda,etc...) to post-step-operations.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable type that is conversional to member type Callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the binding arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>Binding arguments. If func accepts more than one arguments, you can bind the rest arguments here. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="145" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1a202c1480767ceb6d2873f9383d21145b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::add_stop_point_operation</definition>
        <argsstring>(Func func, Args &amp;&amp;... args)</argsstring>
        <name>add_stop_point_operation</name>
        <param>
          <type>Func</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a callable object(function pointer, functor, lambda,etc...) to stop-point-operations.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable type that is conversional to member type Callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the binding arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>Binding arguments. If func accepts more than one arguments, you can bind the rest arguments here. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="156" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1a1f7732aa10f12671047acd41f43b7035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::add_stop_condition</definition>
        <argsstring>(Func func, Args &amp;&amp;... args)</argsstring>
        <name>add_stop_condition</name>
        <param>
          <type>Func</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a callable object(function pointer, functor, lambda,etc...) to stop conditions.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable type that is conversional to member type Stopback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Args</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the binding arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>Callable object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>Binding arguments. If func accepts more than one arguments, you can bind the rest arguments here. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="167" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1a05a043ed2282f9529f326c5e665e93e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::RunArgs&lt; ParticleSys &gt;::add_stop_condition</definition>
        <argsstring>(T end)</argsstring>
        <name>add_stop_condition</name>
        <param>
          <type>T</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the duration time of the integration as a stop condition. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point like scalar. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration time of the integration. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="175" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1aee5ebfc0b21db4a01f5269adfc8e9441" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::RunArgs&lt; ParticleSys &gt;::is_end_time_set</definition>
        <argsstring>() const</argsstring>
        <name>is_end_time_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the integration duration time is set. <simplesect kind="return"><para>boolean </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="181" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_run_args_1aace390d73a2eef9effb0443eb27657ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::RunArgs&lt; ParticleSys &gt;::is_stop_condition_set</definition>
        <argsstring>() const</argsstring>
        <name>is_stop_condition_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if any of the stop condition(except the duration time) is set. <simplesect kind="return"><para>boolean </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="187" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="187" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Run arguments that is used to set all arguments needed by <ref refid="classspace_1_1_simulator" kindref="compound">Simulator</ref>.</para><para>The <ref refid="classspace_1_1_run_args_1a08bff0eae80220bd3d5032dc03204d73" kindref="member">pre_operations()</ref>, <ref refid="classspace_1_1_run_args_1afb2d6fd4b30be449e6fc2d25da8ade22" kindref="member">post_operations()</ref>, <ref refid="classspace_1_1_run_args_1aff3a142b6e217413f37718ad32c21bc8" kindref="member">stop_operations()</ref> and <ref refid="classspace_1_1_run_args_1afa5a645ceadab32a4f924ffd76bed147" kindref="member">check_stops()</ref> will be called in a simulation in this way.</para><para><programlisting><codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">auto<sp/>sys;<sp/></highlight><highlight class="comment">//<sp/>particle<sp/>system<sp/>that<sp/>is<sp/>going<sp/>to<sp/>be<sp/>evolved.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<ref refid="classspace_1_1_run_args_1afa5a645ceadab32a4f924ffd76bed147" kindref="member">check_stops</ref>(sys);){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classspace_1_1_run_args_1a08bff0eae80220bd3d5032dc03204d73" kindref="member">pre_operations</ref>(sys);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight><highlight class="comment">//step<sp/>integration.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classspace_1_1_run_args_1afb2d6fd4b30be449e6fc2d25da8ade22" kindref="member">post_operations</ref>(sys);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classspace_1_1_run_args_1aff3a142b6e217413f37718ad32c21bc8" kindref="member">stop_operations</ref>(sys);</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ParticleSys</parametername>
</parameternamelist>
<parameterdescription>
<para>Any implementation of concept ParticleSystem. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="426">
        <label>space::RunArgs&lt; ParticleSys &gt;</label>
        <link refid="classspace_1_1_run_args"/>
      </node>
    </collaborationgraph>
    <location file="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" line="59" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/simulator.hpp" bodystart="59" bodyend="202"/>
    <listofallmembers>
      <member refid="classspace_1_1_run_args_1a356e0a6fb304ecbd7c649ae3a0486594" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>add_post_step_operation</name></member>
      <member refid="classspace_1_1_run_args_1a40dd8e75c3602befb2ea3a54f850a3de" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>add_pre_step_operation</name></member>
      <member refid="classspace_1_1_run_args_1a1f7732aa10f12671047acd41f43b7035" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>add_stop_condition</name></member>
      <member refid="classspace_1_1_run_args_1a05a043ed2282f9529f326c5e665e93e7" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>add_stop_condition</name></member>
      <member refid="classspace_1_1_run_args_1a202c1480767ceb6d2873f9383d21145b" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>add_stop_point_operation</name></member>
      <member refid="classspace_1_1_run_args_1a0f130e30d4bdb4b1fbfd3e067ac0eea9" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>atol</name></member>
      <member refid="classspace_1_1_run_args_1ab2ae5d33c6cfb8573ce977e9820f0938" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>Callback</name></member>
      <member refid="classspace_1_1_run_args_1afa5a645ceadab32a4f924ffd76bed147" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>check_stops</name></member>
      <member refid="classspace_1_1_run_args_1a46fb7c229ea0286d1a1659856c975867" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>Container</name></member>
      <member refid="classspace_1_1_run_args_1affdb79111542448d328bcc0d0ffd105b" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>Coord</name></member>
      <member refid="classspace_1_1_run_args_1a4f43bc396d42b099ecfb41bdb2d78d7d" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>end_time</name></member>
      <member refid="classspace_1_1_run_args_1ab5386117761e5b4eb52e243912a9c502" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>IdxArray</name></member>
      <member refid="classspace_1_1_run_args_1af82e73ab9f0c400a9cde0575d829517a" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>IntArray</name></member>
      <member refid="classspace_1_1_run_args_1aee5ebfc0b21db4a01f5269adfc8e9441" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>is_end_time_set</name></member>
      <member refid="classspace_1_1_run_args_1ab04556c795d6957ca8b2fbc36ddd5384" prot="private" virt="non-virtual"><scope>space::RunArgs</scope><name>is_end_time_set_</name></member>
      <member refid="classspace_1_1_run_args_1aace390d73a2eef9effb0443eb27657ed" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>is_stop_condition_set</name></member>
      <member refid="classspace_1_1_run_args_1afb2d6fd4b30be449e6fc2d25da8ade22" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>post_operations</name></member>
      <member refid="classspace_1_1_run_args_1a9b86cc38a949a66c4043e53a0cf0368d" prot="private" virt="non-virtual"><scope>space::RunArgs</scope><name>post_opts_</name></member>
      <member refid="classspace_1_1_run_args_1a08bff0eae80220bd3d5032dc03204d73" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>pre_operations</name></member>
      <member refid="classspace_1_1_run_args_1a5feb787410f3b0f25682cfae6bd05cd4" prot="private" virt="non-virtual"><scope>space::RunArgs</scope><name>pre_opts_</name></member>
      <member refid="classspace_1_1_run_args_1abd0b0970bbfc5f62d7e7ac07a2f54c71" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>rtol</name></member>
      <member refid="classspace_1_1_run_args_1ac50cd2f6cb422e2d1fdaa37d0afc48d0" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>Scalar</name></member>
      <member refid="classspace_1_1_run_args_1ad4b83219b5ce45849ff5cc682274f011" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>ScalarArray</name></member>
      <member refid="classspace_1_1_run_args_1a918fcf4f601c96b9aaf477fb8e26e510" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>step_size</name></member>
      <member refid="classspace_1_1_run_args_1a04921230c25ee65ef160f2b7ad295f84" prot="private" virt="non-virtual"><scope>space::RunArgs</scope><name>stop_cond_</name></member>
      <member refid="classspace_1_1_run_args_1aff3a142b6e217413f37718ad32c21bc8" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>stop_operations</name></member>
      <member refid="classspace_1_1_run_args_1a04410ba0463f8c760db7385b07da4204" prot="private" virt="non-virtual"><scope>space::RunArgs</scope><name>stop_opts_</name></member>
      <member refid="classspace_1_1_run_args_1ad706d387865fd3b6399a0d67be56f079" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>StopCall</name></member>
      <member refid="classspace_1_1_run_args_1a3d8afaf1311019a3c2fb27734937bd2c" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>Vector</name></member>
      <member refid="classspace_1_1_run_args_1abad11eb69b51816f44b2e05b17230852" prot="public" virt="non-virtual"><scope>space::RunArgs</scope><name>VectorArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

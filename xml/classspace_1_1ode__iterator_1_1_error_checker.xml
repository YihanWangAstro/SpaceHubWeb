<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1ode__iterator_1_1_error_checker" kind="class" language="C++" prot="public">
    <compoundname>space::ode_iterator::ErrorChecker</compoundname>
    <includes refid="error-checker_8hpp" local="no">error-checker.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1ode__iterator_1_1_error_checker_1a8c5d6a7344a83aac04288f33f61f65da" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend space::ode_iterator::ErrorChecker&lt; Derived &gt;::Derived</definition>
        <argsstring></argsstring>
        <name>Derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="119" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1a563a4c2559d79f569369cde381541b86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; space::ode_iterator::ErrorChecker&lt; Derived &gt;::atol</definition>
        <argsstring>() const noexcept</argsstring>
        <name>atol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-danger" /> <bold>must impl</bold> The getter interface of member <computeroutput>atol</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="46" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1aefaf011e4879aa0acfe87926243b058f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; space::ode_iterator::ErrorChecker&lt; Derived &gt;::rtol</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rtol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-danger" /> <bold>must impl</bold> The getter interface of member <computeroutput>rtol</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="48" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1a792b9fc0a077429cb686224089b9ae8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; space::ode_iterator::ErrorChecker&lt; Derived &gt;::derived</definition>
        <argsstring>()</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-success" /> <bold>auto impl</bold></para><para>The downcast interface of Base class to Derived class. <simplesect kind="return"><para>Derived </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="56" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1a1f767e96bfc475742126d0894a6ad389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::ode_iterator::ErrorChecker&lt; Derived &gt;::set_atol</definition>
        <argsstring>(Scalar abs_error)</argsstring>
        <name>set_atol</name>
        <param>
          <type>Scalar</type>
          <declname>abs_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-info" /> <bold>optional impl</bold> <computeroutput>&gt; Absolute error is required.</computeroutput></para><para>Set the absolute error of the error estimator.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point like type type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">abs_error</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1ac302adc424db45e707b444935dbf619d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Scalar</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::ode_iterator::ErrorChecker&lt; Derived &gt;::set_rtol</definition>
        <argsstring>(Scalar rel_error)</argsstring>
        <name>set_rtol</name>
        <param>
          <type>Scalar</type>
          <declname>rel_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-info" /> <bold>optional impl</bold> <computeroutput>&gt; Relative error is required.</computeroutput></para><para>Set the relative error of the error estimator.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point like type type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rel_error</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1ab1820edaab1060f661ef11dae93ceb56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Array</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto space::ode_iterator::ErrorChecker&lt; Derived &gt;::error</definition>
        <argsstring>(Array const &amp;scale, Array const &amp;diff) -&gt; typename Array::value_type</argsstring>
        <name>error</name>
        <param>
          <type>Array const &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-danger" /> <bold>must impl</bold></para><para>Estimate the error between two results. For example, <formula id="0">\[\mathrm error = {|diff|/|scale|} \]</formula></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Array</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterable array like type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The provided scale for the results. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">diff</parametername>
</parameternamelist>
<parameterdescription>
<para>The difference between two results. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The estimated error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="94" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1af219d44501ea532d0349dfe991fd45cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Array</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto space::ode_iterator::ErrorChecker&lt; Derived &gt;::error</definition>
        <argsstring>(Array const &amp;scale, Array const &amp;y0, Array const &amp;y1) -&gt; typename Array::value_type</argsstring>
        <name>error</name>
        <param>
          <type>Array const &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-label m-flat m-danger" /> <bold>must impl</bold></para><para>Estimate the error between two results with given scale. For example <formula id="1">\[\mathrm error = {|y_0 -y_1|/scale} \]</formula></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Array</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterable array like type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The provided scale for the results. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y0</parametername>
</parameternamelist>
<parameterdescription>
<para>The first result. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y1</parametername>
</parameternamelist>
<parameterdescription>
<para>The second result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="111" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1ac5470c482bd12173fb5435f09406a6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::ode_iterator::ErrorChecker&lt; Derived &gt;::set_atol</definition>
        <argsstring>(T atol)</argsstring>
        <name>set_atol</name>
        <param>
          <type>T</type>
          <declname>atol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="132" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1aac437757c6f57869541d11afee0fac76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::ode_iterator::ErrorChecker&lt; Derived &gt;::set_rtol</definition>
        <argsstring>(T rtol)</argsstring>
        <name>set_rtol</name>
        <param>
          <type>T</type>
          <declname>rtol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="138" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="138" bodyend="140"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspace_1_1ode__iterator_1_1_error_checker_1aafbf75fb614010131238c48dc4c7a2fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::ode_iterator::ErrorChecker&lt; Derived &gt;::ErrorChecker</definition>
        <argsstring>()=default</argsstring>
        <name>ErrorChecker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new <ref refid="classspace_1_1ode__iterator_1_1_error_checker" kindref="compound">ErrorChecker</ref> object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="117" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Abstract class of step error estimator. A class implements(partly/fully) the interfaces of this class via CRTP idiom can be used cross the system as an implementation of the concept <computeroutput><ref refid="classspace_1_1ode__iterator_1_1_error_checker" kindref="compound">ErrorChecker</ref></computeroutput>. The error estimator provides the interface to estimate the error of an integration system.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>The implement class in CRTP idiom. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="90">
        <label>space::ode_iterator::IAS15Error&lt; T &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_i_a_s15_error"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>space::ode_iterator::ErrorChecker&lt; Derived &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_error_checker"/>
      </node>
      <node id="87">
        <label>space::ode_iterator::ErrorChecker&lt; RMS&lt; T &gt; &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_error_checker"/>
        <childnode refid="86" relation="template-instance">
          <edgelabel>&lt; RMS&lt; T &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>space::ode_iterator::ErrorChecker&lt; WorstOffender&lt; T &gt; &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_error_checker"/>
        <childnode refid="86" relation="template-instance">
          <edgelabel>&lt; WorstOffender&lt; T &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>space::ode_iterator::RMS&lt; T &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_r_m_s"/>
        <childnode refid="87" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>space::ode_iterator::WorstOffender&lt; T &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_worst_offender"/>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>space::ode_iterator::ErrorChecker&lt; IAS15Error&lt; T &gt; &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_error_checker"/>
        <childnode refid="86" relation="template-instance">
          <edgelabel>&lt; IAS15Error&lt; T &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="93">
        <label>space::ode_iterator::ErrorChecker&lt; Derived &gt;</label>
        <link refid="classspace_1_1ode__iterator_1_1_error_checker"/>
      </node>
    </collaborationgraph>
    <location file="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" line="43" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/ode-iterator/error-checker/error-checker.hpp" bodystart="43" bodyend="120"/>
    <listofallmembers>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1a563a4c2559d79f569369cde381541b86" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>atol</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1a8c5d6a7344a83aac04288f33f61f65da" prot="private" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>Derived</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1a792b9fc0a077429cb686224089b9ae8b" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>derived</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1ab1820edaab1060f661ef11dae93ceb56" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>error</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1af219d44501ea532d0349dfe991fd45cf" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>error</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1aafbf75fb614010131238c48dc4c7a2fe" prot="private" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>ErrorChecker</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1aefaf011e4879aa0acfe87926243b058f" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>rtol</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1a1f767e96bfc475742126d0894a6ad389" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>set_atol</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1ac5470c482bd12173fb5435f09406a6dd" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>set_atol</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1ac302adc424db45e707b444935dbf619d" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>set_rtol</name></member>
      <member refid="classspace_1_1ode__iterator_1_1_error_checker_1aac437757c6f57869541d11afee0fac76" prot="public" virt="non-virtual"><scope>space::ode_iterator::ErrorChecker</scope><name>set_rtol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

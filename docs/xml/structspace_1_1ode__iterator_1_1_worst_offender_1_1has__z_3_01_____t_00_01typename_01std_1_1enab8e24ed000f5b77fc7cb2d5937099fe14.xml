<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structspace_1_1ode__iterator_1_1_worst_offender_1_1has__z_3_01_____t_00_01typename_01std_1_1enab8e24ed000f5b77fc7cb2d5937099fe14" kind="struct" language="C++" prot="private">
    <compoundname>space::ode_iterator::WorstOffender::has_z&lt; __T, typename std::enable_if&lt; !std::is_same&lt; decltype(std::declval&lt; __T &gt;(). z), void &gt;::value, bool &gt;::type &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">true_type</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename __T</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>space::ode_iterator::WorstOffender&lt; T &gt;::has_z&lt; __T, typename std::enable_if&lt; !std::is_same&lt; decltype(std::declval&lt; __T &gt;(). z), void &gt;::value, bool &gt;::type &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>true_type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>space::ode_iterator::WorstOffender&lt; T &gt;::has_z&lt; __T, typename std::enable_if&lt; !std::is_same&lt; decltype(std::declval&lt; __T &gt;(). z), void &gt;::value, bool &gt;::type &gt;</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>true_type</label>
      </node>
    </collaborationgraph>
    <location file="src/ode-iterator/error-checker/worst-offender.hpp" line="77" column="108" bodyfile="src/ode-iterator/error-checker/worst-offender.hpp" bodystart="77" bodyend="77"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>

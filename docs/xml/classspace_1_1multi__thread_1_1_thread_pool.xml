<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classspace_1_1multi__thread_1_1_thread_pool" kind="class" language="C++" prot="public">
    <compoundname>space::multi_thread::ThreadPool</compoundname>
    <includes refid="thread__pool_8h" local="no">thread_pool.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classspace_1_1multi__thread_1_1_thread_pool_1a47c1222fc453ee561070a139fad9d532" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>using space::multi_thread::ThreadPool::Task =  std::function&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>Task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="20" column="3" bodyfile="src/multi-thread/thread_pool.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classspace_1_1multi__thread_1_1_thread_pool_1a4bd96a618c84926d1829addf8c608ff8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::thread &gt;</type>
        <definition>std::vector&lt;std::thread&gt; space::multi_thread::ThreadPool::workers_</definition>
        <argsstring></argsstring>
        <name>workers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="36" column="15" bodyfile="src/multi-thread/thread_pool.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi__thread_1_1_thread_pool_1a70b20e97a21b911d846ff9adf006439d" prot="private" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="classspace_1_1multi__thread_1_1_thread_pool_1a47c1222fc453ee561070a139fad9d532" kindref="member">Task</ref> &gt;</type>
        <definition>std::queue&lt;Task&gt; space::multi_thread::ThreadPool::tasks_</definition>
        <argsstring></argsstring>
        <name>tasks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="37" column="14" bodyfile="src/multi-thread/thread_pool.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi__thread_1_1_thread_pool_1a0703e6e8b7c6c6583558264915cd1b42" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex space::multi_thread::ThreadPool::lock_</definition>
        <argsstring></argsstring>
        <name>lock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="38" column="14" bodyfile="src/multi-thread/thread_pool.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi__thread_1_1_thread_pool_1a02185b4fcdd60f0fa488be72de59949b" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable space::multi_thread::ThreadPool::cv_</definition>
        <argsstring></argsstring>
        <name>cv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="39" column="27" bodyfile="src/multi-thread/thread_pool.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi__thread_1_1_thread_pool_1aac9f01bd135b40fafea41fa725399d9a" prot="private" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool space::multi_thread::ThreadPool::stop_</definition>
        <argsstring></argsstring>
        <name>stop_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="40" column="20" bodyfile="src/multi-thread/thread_pool.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspace_1_1multi__thread_1_1_thread_pool_1aea785dccdff4ef4d2502302a7b65de20" prot="private" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t space::multi_thread::ThreadPool::max_tasks_</definition>
        <argsstring></argsstring>
        <name>max_tasks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="41" column="16" bodyfile="src/multi-thread/thread_pool.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1multi__thread_1_1_thread_pool_1a98d2b87bedc75ae6f8ae412230697f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::multi_thread::ThreadPool::ThreadPool</definition>
        <argsstring>()=delete</argsstring>
        <name>ThreadPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="22" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi__thread_1_1_thread_pool_1ab654fe7a6640c56274d230d429081c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::multi_thread::ThreadPool::ThreadPool</definition>
        <argsstring>(ThreadPool const &amp;)=delete</argsstring>
        <name>ThreadPool</name>
        <param>
          <type><ref refid="classspace_1_1multi__thread_1_1_thread_pool" kindref="compound">ThreadPool</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi__thread_1_1_thread_pool_1a252ce4c33a3ac02a553c8a337ec95cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspace_1_1multi__thread_1_1_thread_pool" kindref="compound">ThreadPool</ref> &amp;</type>
        <definition>ThreadPool&amp; space::multi_thread::ThreadPool::operator=</definition>
        <argsstring>(ThreadPool const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classspace_1_1multi__thread_1_1_thread_pool" kindref="compound">ThreadPool</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi__thread_1_1_thread_pool_1a197887c63832c6a670a2a6fb39862475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::multi_thread::ThreadPool::ThreadPool</definition>
        <argsstring>(size_t max_thread, size_t max_tasks)</argsstring>
        <name>ThreadPool</name>
        <param>
          <type>size_t</type>
          <declname>max_thread</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_tasks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="28" column="3" bodyfile="src/multi-thread/thread_pool.h" bodystart="46" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi__thread_1_1_thread_pool_1a345105d8717641966b32df97b1183bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::multi_thread::ThreadPool::~ThreadPool</definition>
        <argsstring>()</argsstring>
        <name>~ThreadPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="30" column="3" bodyfile="src/multi-thread/thread_pool.h" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1multi__thread_1_1_thread_pool_1ae3047e9f1199337288365a0260f2edf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto space::multi_thread::ThreadPool::commit</definition>
        <argsstring>(Func &amp;&amp;func, Args &amp;&amp;... args)</argsstring>
        <name>commit</name>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/multi-thread/thread_pool.h" line="33" column="8" bodyfile="src/multi-thread/thread_pool.h" bodystart="75" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>space::multi_thread::ThreadPool</label>
        <link refid="classspace_1_1multi__thread_1_1_thread_pool"/>
      </node>
    </collaborationgraph>
    <location file="src/multi-thread/thread_pool.h" line="18" column="17" bodyfile="src/multi-thread/thread_pool.h" bodystart="18" bodyend="42"/>
    <listofallmembers>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1ae3047e9f1199337288365a0260f2edf2" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>commit</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a02185b4fcdd60f0fa488be72de59949b" prot="private" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>cv_</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a0703e6e8b7c6c6583558264915cd1b42" prot="private" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>lock_</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1aea785dccdff4ef4d2502302a7b65de20" prot="private" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>max_tasks_</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a252ce4c33a3ac02a553c8a337ec95cfc" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>operator=</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1aac9f01bd135b40fafea41fa725399d9a" prot="private" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>stop_</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a47c1222fc453ee561070a139fad9d532" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>Task</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a70b20e97a21b911d846ff9adf006439d" prot="private" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>tasks_</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a98d2b87bedc75ae6f8ae412230697f52" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>ThreadPool</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1ab654fe7a6640c56274d230d429081c19" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>ThreadPool</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a197887c63832c6a670a2a6fb39862475" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>ThreadPool</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a4bd96a618c84926d1829addf8c608ff8" prot="private" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>workers_</name></member>
      <member refid="classspace_1_1multi__thread_1_1_thread_pool_1a345105d8717641966b32df97b1183bcb" prot="public" virt="non-virtual"><scope>space::multi_thread::ThreadPool</scope><name>~ThreadPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

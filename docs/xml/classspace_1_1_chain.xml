<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classspace_1_1_chain" kind="class" language="C++" prot="public">
    <compoundname>space::Chain</compoundname>
    <includes refid="chain_8hpp" local="no">chain.hpp</includes>
    <innerclass refid="structspace_1_1_chain_1_1_node" prot="public">space::Chain::Node</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classspace_1_1_chain_1aba4c65e72d4505d19850f0a94b7ca875" prot="private" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool space::Chain::auto_centre_of_mass_move_</definition>
        <argsstring></argsstring>
        <name>auto_centre_of_mass_move_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="66" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspace_1_1_chain_1ae570df3513d4daecd23b54ca4548f07c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::Chain::Chain</definition>
        <argsstring>()=default</argsstring>
        <name>Chain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1aae885fbe1f31d0d903995ee96c2294c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::Chain::Chain</definition>
        <argsstring>(Chain const &amp;)=default</argsstring>
        <name>Chain</name>
        <param>
          <type><ref refid="classspace_1_1_chain" kindref="compound">Chain</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1ade5f7ba028ee32b540cd62e32800de61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::Chain::Chain</definition>
        <argsstring>(Chain &amp;&amp;)=default</argsstring>
        <name>Chain</name>
        <param>
          <type><ref refid="classspace_1_1_chain" kindref="compound">Chain</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default move constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1aba865aabd5f1b0dbddcad4aa26c80e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspace_1_1_chain" kindref="compound">Chain</ref> &amp;</type>
        <definition>Chain&amp; space::Chain::operator=</definition>
        <argsstring>(Chain const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classspace_1_1_chain" kindref="compound">Chain</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default copy assignment operator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a3397dd1dc4dab782cada71b2272d70a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspace_1_1_chain" kindref="compound">Chain</ref> &amp;</type>
        <definition>Chain&amp; space::Chain::operator=</definition>
        <argsstring>(Chain &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classspace_1_1_chain" kindref="compound">Chain</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default move assignment operator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="51" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classspace_1_1_chain_1a0f19e1f376d450b5af15980a77380d5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Coord</type>
          </param>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::calc_chain_index</definition>
        <argsstring>(Coord const &amp;pos, IdxArray &amp;index)</argsstring>
        <name>calc_chain_index</name>
        <param>
          <type>Coord const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>IdxArray &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="54" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a2ed2334e9b84ccbf0c239ddabc5136ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Coord</type>
          </param>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::update_chain</definition>
        <argsstring>(Coord &amp;chain, IdxArray const &amp;idx, IdxArray const &amp;new_idx)</argsstring>
        <name>update_chain</name>
        <param>
          <type>Coord &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>IdxArray const &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>IdxArray const &amp;</type>
          <declname>new_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="57" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="103" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a71ba98504638c754624f84656be9e96b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ScalarArray</type>
          </param>
          <param>
            <type>typename Coord</type>
          </param>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::calc_cartesian</definition>
        <argsstring>(ScalarArray const &amp;mass, Coord const &amp;chain, Coord &amp;cartesian, IdxArray const &amp;index)</argsstring>
        <name>calc_cartesian</name>
        <param>
          <type>ScalarArray const &amp;</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>Coord const &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>Coord &amp;</type>
          <declname>cartesian</declname>
        </param>
        <param>
          <type>IdxArray const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="60" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a692d44bf729b4751b579a82b3580daf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Coord</type>
          </param>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::calc_chain</definition>
        <argsstring>(Coord const &amp;cartesian, Coord &amp;chain, IdxArray const &amp;index)</argsstring>
        <name>calc_chain</name>
        <param>
          <type>Coord const &amp;</type>
          <declname>cartesian</declname>
        </param>
        <param>
          <type>Coord &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>IdxArray const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="63" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="139" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classspace_1_1_chain_1a5d18e1a3d0167ccdd85bd75f5b4b0a45" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool space::Chain::not_in_list</definition>
        <argsstring>(std::list&lt; T &gt; &amp;list, T var)</argsstring>
        <name>not_in_list</name>
        <param>
          <type>std::list&lt; T &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>T</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="69" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a630246b6acaf8bf117d1d7164f79efb4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InsertOpt</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool space::Chain::try_insert</definition>
        <argsstring>(std::list&lt; size_t &gt; &amp;list, size_t &amp;chain_end, Node &amp;n, size_t idx, InsertOpt insert)</argsstring>
        <name>try_insert</name>
        <param>
          <type>std::list&lt; size_t &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>chain_end</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1_chain_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>InsertOpt</type>
          <declname>insert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="72" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a1b6fe60fc2c34aa15c873d77acca71d8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool space::Chain::try_add_to_chain</definition>
        <argsstring>(std::list&lt; size_t &gt; &amp;list, size_t &amp;head, size_t &amp;tail, Node &amp;n)</argsstring>
        <name>try_add_to_chain</name>
        <param>
          <type>std::list&lt; size_t &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>head</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>tail</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1_chain_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="74" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="162" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a4c7057181be4f9087da7691f872ef661" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Coord</type>
          </param>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::create_distances_array</definition>
        <argsstring>(Coord const &amp;pos, Container &amp;vec)</argsstring>
        <name>create_distances_array</name>
        <param>
          <type>Coord const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>Container &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="77" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="176" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a96e0e72eca341a98e78b7c01de1a4a67" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::create_index_from_dist_array</definition>
        <argsstring>(std::vector&lt; Node &gt; &amp;dist, IdxArray &amp;idx, size_t num)</argsstring>
        <name>create_index_from_dist_array</name>
        <param>
          <type>std::vector&lt; <ref refid="structspace_1_1_chain_1_1_node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>dist</declname>
        </param>
        <param>
          <type>IdxArray &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="80" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="190" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1ac46104804f95594dda598c89d300a43f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Coord</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto space::Chain::get_new_node</definition>
        <argsstring>(Coord const &amp;chain, size_t head, size_t tail) -&gt; typename Coord::Vector</argsstring>
        <name>get_new_node</name>
        <param>
          <type>Coord const &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>head</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="83" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="220" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a5d8d062bf058ffea1a788d33e5fef5cf" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Array</type>
          </param>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::to_chain</definition>
        <argsstring>(Array const &amp;cartesian, Array &amp;chain, IdxArray const &amp;index)</argsstring>
        <name>to_chain</name>
        <param>
          <type>Array const &amp;</type>
          <declname>cartesian</declname>
        </param>
        <param>
          <type>Array &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>IdxArray const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="86" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="245" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classspace_1_1_chain_1a1cd47d4e46241280926a246fe587f0e8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Array</type>
          </param>
          <param>
            <type>typename IdxArray</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void space::Chain::to_cartesian</definition>
        <argsstring>(Array const &amp;chain, Array &amp;cartesian, IdxArray const &amp;index)</argsstring>
        <name>to_cartesian</name>
        <param>
          <type>Array const &amp;</type>
          <declname>chain</declname>
        </param>
        <param>
          <type>Array &amp;</type>
          <declname>cartesian</declname>
        </param>
        <param>
          <type>IdxArray const &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="89" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="256" bodyend="264"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="47">
        <label>space::Chain</label>
        <link refid="classspace_1_1_chain"/>
      </node>
    </collaborationgraph>
    <location file="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" line="41" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/particle-system/chain.hpp" bodystart="41" bodyend="90"/>
    <listofallmembers>
      <member refid="classspace_1_1_chain_1aba4c65e72d4505d19850f0a94b7ca875" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>auto_centre_of_mass_move_</name></member>
      <member refid="classspace_1_1_chain_1a71ba98504638c754624f84656be9e96b" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>calc_cartesian</name></member>
      <member refid="classspace_1_1_chain_1a692d44bf729b4751b579a82b3580daf6" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>calc_chain</name></member>
      <member refid="classspace_1_1_chain_1a0f19e1f376d450b5af15980a77380d5f" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>calc_chain_index</name></member>
      <member refid="classspace_1_1_chain_1ae570df3513d4daecd23b54ca4548f07c" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>Chain</name></member>
      <member refid="classspace_1_1_chain_1aae885fbe1f31d0d903995ee96c2294c5" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>Chain</name></member>
      <member refid="classspace_1_1_chain_1ade5f7ba028ee32b540cd62e32800de61" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>Chain</name></member>
      <member refid="classspace_1_1_chain_1a4c7057181be4f9087da7691f872ef661" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>create_distances_array</name></member>
      <member refid="classspace_1_1_chain_1a96e0e72eca341a98e78b7c01de1a4a67" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>create_index_from_dist_array</name></member>
      <member refid="classspace_1_1_chain_1ac46104804f95594dda598c89d300a43f" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>get_new_node</name></member>
      <member refid="classspace_1_1_chain_1a5d18e1a3d0167ccdd85bd75f5b4b0a45" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>not_in_list</name></member>
      <member refid="classspace_1_1_chain_1aba865aabd5f1b0dbddcad4aa26c80e24" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>operator=</name></member>
      <member refid="classspace_1_1_chain_1a3397dd1dc4dab782cada71b2272d70a1" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>operator=</name></member>
      <member refid="classspace_1_1_chain_1a1cd47d4e46241280926a246fe587f0e8" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>to_cartesian</name></member>
      <member refid="classspace_1_1_chain_1a5d8d062bf058ffea1a788d33e5fef5cf" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>to_chain</name></member>
      <member refid="classspace_1_1_chain_1a1b6fe60fc2c34aa15c873d77acca71d8" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>try_add_to_chain</name></member>
      <member refid="classspace_1_1_chain_1a630246b6acaf8bf117d1d7164f79efb4" prot="private" virt="non-virtual"><scope>space::Chain</scope><name>try_insert</name></member>
      <member refid="classspace_1_1_chain_1a2ed2334e9b84ccbf0c239ddabc5136ec" prot="public" virt="non-virtual"><scope>space::Chain</scope><name>update_chain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="secular_8h" kind="file" language="C++">
    <compoundname>secular.h</compoundname>
    <includes local="no">array</includes>
    <includes local="no">iostream</includes>
    <includes local="no">tuple</includes>
    <includes local="yes">/home/yihan/Repositories/odeint-v2/include/boost/numeric/odeint.hpp</includes>
    <includes local="yes">vector3d.h</includes>
    <incdepgraph>
      <node id="876">
        <label>/home/yihan/Repositories/odeint-v2/include/boost/numeric/odeint.hpp</label>
      </node>
      <node id="875">
        <label>tuple</label>
      </node>
      <node id="877">
        <label>vector3d.h</label>
      </node>
      <node id="873">
        <label>array</label>
      </node>
      <node id="872">
        <label>/home/yihan/Repositories/SpaceHub/src/secular.h</label>
        <link refid="secular_8h"/>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
      </node>
      <node id="874">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsecular_1_1_secular" prot="public">secular::Secular</innerclass>
    <innernamespace refid="namespacesecular">secular</innernamespace>
    <innernamespace refid="namespaceboost_1_1numeric_1_1odeint">boost::numeric::odeint</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="secular_8h_1aebfdeef0016942e58b42d0bc6b2ba362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void single_thread_run</definition>
        <argsstring>(state_type const &amp;ini_conditions, double start_t, double end_t)</argsstring>
        <name>single_thread_run</name>
        <param>
          <type>state_type const &amp;</type>
          <declname>ini_conditions</declname>
        </param>
        <param>
          <type>double</type>
          <declname>start_t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>end_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/secular.h" line="128" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/secular.h" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="secular_8h_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yihan/Repositories/SpaceHub/src/secular.h" line="134" column="1" bodyfile="/home/yihan/Repositories/SpaceHub/src/secular.h" bodystart="134" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/yihan/Repositories/SpaceHub/src/secular.h"/>
  </compounddef>
</doxygen>

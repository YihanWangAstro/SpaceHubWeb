<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structspace_1_1_m_k_l_array" kind="struct" language="C++" prot="public">
    <compoundname>space::MKLArray</compoundname>
    <includes refid="mkl-array_8h" local="no">mkl-array.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>Size</declname>
        <defname>Size</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structspace_1_1_m_k_l_array_1adf77c294eec553583242c23937379df8" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* space::MKLArray&lt; T, Size &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="45" column="5" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a122cb694c38b12f53371fd110df4e677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::MKLArray&lt; T, Size &gt;::MKLArray</definition>
        <argsstring>()</argsstring>
        <name>MKLArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="15" column="3" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a031d22d6a80fdee38e5d019e9ef794db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::MKLArray&lt; T, Size &gt;::~MKLArray</definition>
        <argsstring>()</argsstring>
        <name>~MKLArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="17" column="3" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a5487071bbe2d57affc462f27588aafda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>space::MKLArray&lt; T, Size &gt;::MKLArray</definition>
        <argsstring>(const MKLArray &amp;src)</argsstring>
        <name>MKLArray</name>
        <param>
          <type>const <ref refid="structspace_1_1_m_k_l_array" kindref="compound">MKLArray</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="19" column="3" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a2bc38bbcc14b169155bd2448ab6d7f40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structspace_1_1_m_k_l_array" kindref="compound">MKLArray</ref> &amp;</type>
        <definition>MKLArray&amp; space::MKLArray&lt; T, Size &gt;::operator=</definition>
        <argsstring>(MKLArray const &amp;src)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structspace_1_1_m_k_l_array" kindref="compound">MKLArray</ref> const &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="21" column="12" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a83b608b6cad7813702f030bd11e165c1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>space::MKLArray&lt; T, Size &gt;::MKLArray</definition>
        <argsstring>(MKLArray &amp;&amp;src) noexcept</argsstring>
        <name>MKLArray</name>
        <param>
          <type><ref refid="structspace_1_1_m_k_l_array" kindref="compound">MKLArray</ref> &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="26" column="3" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a9231b07bff7d4e9dd9ce693f945a8e01" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structspace_1_1_m_k_l_array" kindref="compound">MKLArray</ref> &amp;</type>
        <definition>MKLArray&amp; space::MKLArray&lt; T, Size &gt;::operator=</definition>
        <argsstring>(MKLArray &amp;&amp;src) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structspace_1_1_m_k_l_array" kindref="compound">MKLArray</ref> &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="31" column="12" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1ac298e839a300da05e97a7b0aa641a40d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; space::MKLArray&lt; T, Size &gt;::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="38" column="11" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1aa7dc3a9fffc3e9126e1442b1689c9dd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; space::MKLArray&lt; T, Size &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="40" column="5" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1_m_k_l_array_1a2724c5b75e92cec2527f9569d537c39f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* space::MKLArray&lt; T, Size &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lazy-evaluation/mkl-array.h" line="42" column="5" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>space::MKLArray&lt; T, Size &gt;</label>
        <link refid="structspace_1_1_m_k_l_array"/>
      </node>
    </collaborationgraph>
    <location file="src/lazy-evaluation/mkl-array.h" line="12" column="15" bodyfile="src/lazy-evaluation/mkl-array.h" bodystart="12" bodyend="46"/>
    <listofallmembers>
      <member refid="structspace_1_1_m_k_l_array_1adf77c294eec553583242c23937379df8" prot="private" virt="non-virtual"><scope>space::MKLArray</scope><name>data_</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a2724c5b75e92cec2527f9569d537c39f" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>get</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a122cb694c38b12f53371fd110df4e677" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>MKLArray</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a5487071bbe2d57affc462f27588aafda" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>MKLArray</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a83b608b6cad7813702f030bd11e165c1" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>MKLArray</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a2bc38bbcc14b169155bd2448ab6d7f40" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>operator=</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a9231b07bff7d4e9dd9ce693f945a8e01" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>operator=</name></member>
      <member refid="structspace_1_1_m_k_l_array_1ac298e839a300da05e97a7b0aa641a40d" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>operator[]</name></member>
      <member refid="structspace_1_1_m_k_l_array_1aa7dc3a9fffc3e9126e1442b1689c9dd1" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>operator[]</name></member>
      <member refid="structspace_1_1_m_k_l_array_1a031d22d6a80fdee38e5d019e9ef794db" prot="public" virt="non-virtual"><scope>space::MKLArray</scope><name>~MKLArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="structspace_1_1orbit_1_1_kepler_orbit" kind="struct" language="C++" prot="public">
    <compoundname>space::orbit::KeplerOrbit</compoundname>
    <includes refid="orbits_8hpp" local="no">orbits.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Real</declname>
        <defname>Real</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" prot="public" static="no">
        <type>Real</type>
        <definition>using space::orbit::KeplerOrbit&lt; Real &gt;::Scalar =  Real</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
<para>Floating point like type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="65" column="3" bodyfile="src/orbits/orbits.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structspace_1_1orbit_1_1_kepler_orbit_1a87fe252c858a2655420c61ba2994dc3f" prot="public" static="no">
        <type>std::variant&lt; Real, <ref refid="structspace_1_1orbit_1_1_random_indicator" kindref="compound">RandomIndicator</ref> &gt;</type>
        <definition>using space::orbit::KeplerOrbit&lt; Real &gt;::Variant =  std::variant&lt;Real, RandomIndicator&gt;</definition>
        <argsstring></argsstring>
        <name>Variant</name>
        <briefdescription>
<para>Variant that can hold both a Scalar OR a random indictor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="70" column="3" bodyfile="src/orbits/orbits.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1a6bd820deefe5d0c09012e3fd36aea952" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::m1</definition>
        <argsstring></argsstring>
        <name>m1</name>
        <briefdescription>
<para>Mass of the primary object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="74" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1acc8297d015fd61029bec16c31b677a6a" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::m2</definition>
        <argsstring></argsstring>
        <name>m2</name>
        <briefdescription>
<para>Mass of the secondary object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="78" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1a26c061bf75786254584795af5bcd7315" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <briefdescription>
<para>Eccentricity of the orbit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="82" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1ada8aad58f3afe02ccef9aac32904659e" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
<para>Semi-latus rectum of the orbit a(1-e^2) . </para>
        </briefdescription>
        <detaileddescription>
<para>We don&apos;t use semi-major axis for this general orbital type because the semi-major axis for parabolic orbit is undefined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="89" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1a1b7f88495c4c38f56d4d8c8c054a2be9" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
<para>Orbit inclination. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="93" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1af07efe10f12bb60fc34030b407d7da2d" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::Omega</definition>
        <argsstring></argsstring>
        <name>Omega</name>
        <briefdescription>
<para>Longitude of the ascending node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="97" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1a003a56ed520317c25f6ee50670aa1c2b" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::omega</definition>
        <argsstring></argsstring>
        <name>omega</name>
        <briefdescription>
<para>Argument of periapsis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="101" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1a9148410a05d72c34f6b7f561dfbdb4a9" prot="public" static="no" mutable="no">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
        <definition>Scalar space::orbit::KeplerOrbit&lt; Real &gt;::nu</definition>
        <argsstring></argsstring>
        <name>nu</name>
        <briefdescription>
<para>True anomaly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="105" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structspace_1_1orbit_1_1_kepler_orbit_1a0daca584f9a2643e05810accc8ea5446" prot="public" static="no" mutable="no">
        <type><ref refid="namespacespace_1_1orbit_1a5b218ab4c1cd5603e9dfb9e657297ff5" kindref="member">OrbitType</ref></type>
        <definition>OrbitType space::orbit::KeplerOrbit&lt; Real &gt;::orbit_type</definition>
        <argsstring></argsstring>
        <name>orbit_type</name>
        <briefdescription>
<para>Orbit type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="109" column="13" bodyfile="src/orbits/orbits.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a7a0dd45fb228845f5e7f4ce4bd1b5c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::orbit::KeplerOrbit&lt; Real &gt;::KeplerOrbit</definition>
        <argsstring>()=default</argsstring>
        <name>KeplerOrbit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="111" column="7"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a0fa156f874494fccd91bc28d13cd890f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::orbit::KeplerOrbit&lt; Real &gt;::KeplerOrbit</definition>
        <argsstring>(KeplerOrbit const &amp;)=default</argsstring>
        <name>KeplerOrbit</name>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="111" column="37"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a8a707a9cee707d407b5c0c07efdd937a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::orbit::KeplerOrbit&lt; Real &gt;::KeplerOrbit</definition>
        <argsstring>(KeplerOrbit &amp;&amp;)=default</argsstring>
        <name>KeplerOrbit</name>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default move constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="111" column="70"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a14a61d5c3113609af66b022f98d491c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> &amp;</type>
        <definition>KeplerOrbit&amp; space::orbit::KeplerOrbit&lt; Real &gt;::operator=</definition>
        <argsstring>(KeplerOrbit const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default copy assignment operator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="111" column="116"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a26467916151fe158d1e027943b5cb08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> &amp;</type>
        <definition>KeplerOrbit&amp; space::orbit::KeplerOrbit&lt; Real &gt;::operator=</definition>
        <argsstring>(KeplerOrbit &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default move assignment operator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="111" column="160"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1acc84219e953e1d849d5a1fdb95bd95f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>space::orbit::KeplerOrbit&lt; Real &gt;::KeplerOrbit</definition>
        <argsstring>(Scalar m_1, Scalar m_2, Scalar semi_latus_rectum, Scalar eccentricity, Variant inclination, Variant longitude_of_ascending_node, Variant argument_of_periapsis, Variant true_anomaly)</argsstring>
        <name>KeplerOrbit</name>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
          <declname>m_1</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
          <declname>m_2</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
          <declname>semi_latus_rectum</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" kindref="member">Scalar</ref></type>
          <declname>eccentricity</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a87fe252c858a2655420c61ba2994dc3f" kindref="member">Variant</ref></type>
          <declname>inclination</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a87fe252c858a2655420c61ba2994dc3f" kindref="member">Variant</ref></type>
          <declname>longitude_of_ascending_node</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a87fe252c858a2655420c61ba2994dc3f" kindref="member">Variant</ref></type>
          <declname>argument_of_periapsis</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit_1a87fe252c858a2655420c61ba2994dc3f" kindref="member">Variant</ref></type>
          <declname>true_anomaly</declname>
        </param>
        <briefdescription>
<para>Construct a new Orbit Args object from orbital parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m_1</parametername>
</parameternamelist>
<parameterdescription>
<para>Mass of the primary object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Mass of the secondary object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">semi_latus_rectum</parametername>
</parameternamelist>
<parameterdescription>
<para>Semi-latus rectum. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eccentricity</parametername>
</parameternamelist>
<parameterdescription>
<para>Eccentricity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inclination</parametername>
</parameternamelist>
<parameterdescription>
<para>Inclination. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">longitude_of_ascending_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude of the ascending node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argument_of_periapsis</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument of the periapsis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">true_anomaly</parametername>
</parameternamelist>
<parameterdescription>
<para>True anomaly. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="125" column="3" bodyfile="src/orbits/orbits.hpp" bodystart="356" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a6b451e32b6f31ffd87b7ff6ce8034c83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::orbit::KeplerOrbit&lt; Real &gt;::shuffle_i</definition>
        <argsstring>()</argsstring>
        <name>shuffle_i</name>
        <briefdescription>
<para>Suffle the inclination. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="131" column="15" bodyfile="src/orbits/orbits.hpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a0d4c3c371062bbe3c34def9fd738467a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::orbit::KeplerOrbit&lt; Real &gt;::shuffle_Omega</definition>
        <argsstring>()</argsstring>
        <name>shuffle_Omega</name>
        <briefdescription>
<para>Suffle the Longitude of the ascending node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="136" column="15" bodyfile="src/orbits/orbits.hpp" bodystart="403" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a89382d0eaf078c0f687cdfdae211dfb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::orbit::KeplerOrbit&lt; Real &gt;::shuffle_omega</definition>
        <argsstring>()</argsstring>
        <name>shuffle_omega</name>
        <briefdescription>
<para>Suffle the Argument of periapsis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="141" column="15" bodyfile="src/orbits/orbits.hpp" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="structspace_1_1orbit_1_1_kepler_orbit_1a7b91e2ba1f156a8c5fba2c239c55d20d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void space::orbit::KeplerOrbit&lt; Real &gt;::shuffle_nu</definition>
        <argsstring>()</argsstring>
        <name>shuffle_nu</name>
        <briefdescription>
<para>Suffle the true anomaly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="146" column="15" bodyfile="src/orbits/orbits.hpp" bodystart="413" bodyend="421"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structspace_1_1orbit_1_1_kepler_orbit_1a9dd92969076b230d05dc32d893e0ebcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, KeplerOrbit const &amp;obt)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structspace_1_1orbit_1_1_kepler_orbit" kindref="compound">KeplerOrbit</ref> const &amp;</type>
          <declname>obt</declname>
        </param>
        <briefdescription>
<para>Write the orbit to an ouput stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os[out]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obt[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>Orbit parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream&amp; Output stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/orbits/orbits.hpp" line="155" column="10" bodyfile="src/orbits/orbits.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Orbital parameters of the Kepler orbit. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Real</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point like type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>space::orbit::HyperOrbit</label>
        <link refid="structspace_1_1orbit_1_1_hyper_orbit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>space::orbit::EllipOrbit</label>
        <link refid="structspace_1_1orbit_1_1_ellip_orbit"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>space::orbit::KeplerOrbit&lt; double &gt;</label>
        <link refid="structspace_1_1orbit_1_1_kepler_orbit"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>space::orbit::KeplerOrbit&lt; Real &gt;</label>
        <link refid="structspace_1_1orbit_1_1_kepler_orbit"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Real</label>
      </node>
      <node id="1">
        <label>space::orbit::KeplerOrbit&lt; Real &gt;</label>
        <link refid="structspace_1_1orbit_1_1_kepler_orbit"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+m1</edgelabel>
          <edgelabel>+p</edgelabel>
          <edgelabel>+m2</edgelabel>
          <edgelabel>+omega</edgelabel>
          <edgelabel>+Omega</edgelabel>
          <edgelabel>+e</edgelabel>
          <edgelabel>+i</edgelabel>
          <edgelabel>+nu</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/orbits/orbits.hpp" line="60" column="18" bodyfile="src/orbits/orbits.hpp" bodystart="60" bodyend="159"/>
    <listofallmembers>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a26c061bf75786254584795af5bcd7315" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>e</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a1b7f88495c4c38f56d4d8c8c054a2be9" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>i</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a7a0dd45fb228845f5e7f4ce4bd1b5c30" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>KeplerOrbit</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a0fa156f874494fccd91bc28d13cd890f" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>KeplerOrbit</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a8a707a9cee707d407b5c0c07efdd937a" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>KeplerOrbit</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1acc84219e953e1d849d5a1fdb95bd95f3" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>KeplerOrbit</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a6bd820deefe5d0c09012e3fd36aea952" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>m1</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1acc8297d015fd61029bec16c31b677a6a" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>m2</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a9148410a05d72c34f6b7f561dfbdb4a9" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>nu</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1af07efe10f12bb60fc34030b407d7da2d" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>Omega</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a003a56ed520317c25f6ee50670aa1c2b" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>omega</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a9dd92969076b230d05dc32d893e0ebcf" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>operator&lt;&lt;</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a14a61d5c3113609af66b022f98d491c7" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>operator=</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a26467916151fe158d1e027943b5cb08d" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>operator=</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a0daca584f9a2643e05810accc8ea5446" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>orbit_type</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1ada8aad58f3afe02ccef9aac32904659e" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>p</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a3522e05da91e018f4e09c0ce2149ab47" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>Scalar</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a6b451e32b6f31ffd87b7ff6ce8034c83" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>shuffle_i</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a7b91e2ba1f156a8c5fba2c239c55d20d" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>shuffle_nu</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a0d4c3c371062bbe3c34def9fd738467a" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>shuffle_Omega</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a89382d0eaf078c0f687cdfdae211dfb5" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>shuffle_omega</name></member>
      <member refid="structspace_1_1orbit_1_1_kepler_orbit_1a87fe252c858a2655420c61ba2994dc3f" prot="public" virt="non-virtual"><scope>space::orbit::KeplerOrbit</scope><name>Variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
